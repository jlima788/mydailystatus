{"ast":null,"code":"var _jsxFileName = \"/home/everaldo/Projects/mydailystatus/pages/app.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport auth0 from '../lib/auth0';\nimport router from 'next/router';\nimport { db } from '../lib/db';\n\nconst App = props => {\n  useEffect(() => {\n    if (!props.isAuth) {\n      router.push('/');\n    }\n  });\n\n  if (!props.isAuth) {\n    return null;\n  }\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, \"App\"), __jsx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, JSON.stringify(props, null, 2)));\n};\n\nexport default App;\nexport async function getServerSideProps({\n  req,\n  res\n}) {\n  const session = await auth0.getSession(req);\n\n  if (session) {\n    const todaysCheckin = await db.collection('markers').doc('2020-04-10').collection('checks').doc(session.user.sub).get();\n    const todaysData = todaysCheckin.data();\n    let forceCreate = true;\n\n    if (todaysData) {\n      forceCreate = false;\n    }\n\n    return {\n      props: {\n        isAuth: true,\n        user: session.user,\n        forceCreate\n      }\n    };\n  }\n\n  return {\n    props: {\n      isAuth: false,\n      user: {}\n    }\n  };\n}","map":{"version":3,"sources":["/home/everaldo/Projects/mydailystatus/pages/app.js"],"names":["React","useEffect","auth0","router","db","App","props","isAuth","push","JSON","stringify","getServerSideProps","req","res","session","getSession","todaysCheckin","collection","doc","user","sub","get","todaysData","data","forceCreate"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAAQC,EAAR,QAAkB,WAAlB;;AAEA,MAAMC,GAAG,GAAGC,KAAK,IAAI;AACnBL,EAAAA,SAAS,CAAC,MAAM;AACd,QAAG,CAACK,KAAK,CAACC,MAAV,EAAiB;AACfJ,MAAAA,MAAM,CAACK,IAAP,CAAY,GAAZ;AACD;AACF,GAJQ,CAAT;;AAMA,MAAG,CAACF,KAAK,CAACC,MAAV,EAAiB;AACf,WAAO,IAAP;AACD;;AAED,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAME,IAAI,CAACC,SAAL,CAAeJ,KAAf,EAAsB,IAAtB,EAA4B,CAA5B,CAAN,CAFF,CADF;AAMD,CAjBD;;AAmBA,eAAeD,GAAf;AAEA,OAAO,eAAeM,kBAAf,CAAkC;AAAEC,EAAAA,GAAF;AAAOC,EAAAA;AAAP,CAAlC,EAAgD;AACrD,QAAMC,OAAO,GAAG,MAAMZ,KAAK,CAACa,UAAN,CAAiBH,GAAjB,CAAtB;;AACA,MAAGE,OAAH,EAAW;AACT,UAAME,aAAa,GAAG,MAAMZ,EAAE,CAC3Ba,UADyB,CACd,SADc,EAEzBC,GAFyB,CAErB,YAFqB,EAGzBD,UAHyB,CAGd,QAHc,EAIzBC,GAJyB,CAIrBJ,OAAO,CAACK,IAAR,CAAaC,GAJQ,EAKzBC,GALyB,EAA5B;AAOA,UAAMC,UAAU,GAAGN,aAAa,CAACO,IAAd,EAAnB;AACA,QAAIC,WAAW,GAAG,IAAlB;;AAEA,QAAGF,UAAH,EAAc;AACZE,MAAAA,WAAW,GAAG,KAAd;AACD;;AAED,WAAO;AACLlB,MAAAA,KAAK,EAAE;AACLC,QAAAA,MAAM,EAAE,IADH;AAELY,QAAAA,IAAI,EAAEL,OAAO,CAACK,IAFT;AAGLK,QAAAA;AAHK;AADF,KAAP;AAOD;;AACD,SAAO;AACLlB,IAAAA,KAAK,EAAE;AACLC,MAAAA,MAAM,EAAE,KADH;AAELY,MAAAA,IAAI,EAAE;AAFD;AADF,GAAP;AAMD","sourcesContent":["import React, { useEffect } from 'react'\nimport auth0 from '../lib/auth0'\nimport router from 'next/router'\nimport {db } from '../lib/db'\n\nconst App = props => {\n  useEffect(() => {\n    if(!props.isAuth){\n      router.push('/')\n    }\n  })\n\n  if(!props.isAuth){\n    return null\n  }\n\n  return (\n    <div>\n      <h1>App</h1>\n      <pre>{JSON.stringify(props, null, 2)}</pre>\n    </div>\n  )\n}\n\nexport default App\n\nexport async function getServerSideProps({ req, res }) {\n  const session = await auth0.getSession(req)\n  if(session){\n    const todaysCheckin = await db\n      .collection('markers')\n      .doc('2020-04-10')\n      .collection('checks')\n      .doc(session.user.sub)\n      .get()\n\n    const todaysData = todaysCheckin.data()\n    let forceCreate = true\n\n    if(todaysData){\n      forceCreate = false\n    } \n\n    return {\n      props: {\n        isAuth: true,\n        user: session.user,\n        forceCreate\n      }\n    }\n  }\n  return {\n    props: {\n      isAuth: false,\n      user: {}\n    }\n  }\n}"]},"metadata":{},"sourceType":"module"}