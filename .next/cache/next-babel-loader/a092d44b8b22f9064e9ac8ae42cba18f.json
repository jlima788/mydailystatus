{"ast":null,"code":"var _jsxFileName = \"/home/everaldo/Projects/mydailystatus/pages/app.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport auth0 from '../lib/auth0';\nimport router from 'next/router'; //import { db } from '../lib/db'\n\nconst App = props => {\n  // useEffect(() => {\n  //   if(!props.isAuth){\n  //     router.push('/')\n  //   } else if(props.forceCreate) {\n  //     router.push('/create-status')\n  //   }\n  // })\n  // if(!props.isAuth || !props.forceCreate){\n  //   return null\n  // }\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, \"App\"), __jsx(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }), __jsx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, JSON.stringify(props, null, 2)));\n};\n\nexport default App;\nexport async function getServerSideProps({\n  req,\n  res\n}) {\n  const session = await auth0.getSession(req);\n  const today = new Date();\n  const currentDate = today.getFullYear() + '-' + today.getMonth() + '-' + today.getDate();\n\n  if (session) {\n    // const todaysCheckin = await db\n    //   .collection('markers')\n    //   .doc(currentDate)\n    //   .collection('checks')\n    //   .doc(session.user.sub)\n    //   .get()\n    // const todaysData = todaysCheckin.data()\n    // let forceCreate = true\n    // if(todaysData){\n    //   forceCreate = false\n    //   const checkins = await db\n    //     .collection('markers')\n    //     .doc(currentDate)\n    //     .collection('checks')\n    //     .near({\n    //       center: todaysData.coordinates,\n    //       radius: 1000\n    //     })\n    //     .get()\n    //     const checkinsList = []\n    //     checkins.docs.forEach(doc => {\n    //       checkinsList.push({\n    //         id: doc.id,\n    //         status: doc.data().status,\n    //         coords: {\n    //           lat: doc.data().coordinates.latitude,\n    //           long: doc.data().coordinates.longitude\n    //         }\n    //       })\n    //     })\n    //     return {\n    //       props: {\n    //         isAuth: true,\n    //         user: session.user,\n    //         forceCreate: false,\n    //         checkins: checkinsList\n    //       }\n    //     }\n    // } \n    return {\n      props: {\n        isAuth: true,\n        user: session.user // forceCreate\n\n      }\n    };\n  }\n\n  return {\n    props: {\n      isAuth: false,\n      user: {}\n    }\n  };\n}","map":{"version":3,"sources":["/home/everaldo/Projects/mydailystatus/pages/app.js"],"names":["React","useEffect","auth0","router","App","props","JSON","stringify","getServerSideProps","req","res","session","getSession","today","Date","currentDate","getFullYear","getMonth","getDate","isAuth","user"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB,C,CACA;;AAEA,MAAMC,GAAG,GAAGC,KAAK,IAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMC,IAAI,CAACC,SAAL,CAAeF,KAAf,EAAsB,IAAtB,EAA4B,CAA5B,CAAN,CALF,CADF;AASD,CAtBD;;AAwBA,eAAeD,GAAf;AAEA,OAAO,eAAeI,kBAAf,CAAkC;AAAEC,EAAAA,GAAF;AAAOC,EAAAA;AAAP,CAAlC,EAAgD;AACrD,QAAMC,OAAO,GAAG,MAAMT,KAAK,CAACU,UAAN,CAAiBH,GAAjB,CAAtB;AACA,QAAMI,KAAK,GAAG,IAAIC,IAAJ,EAAd;AACA,QAAMC,WAAW,GAAGF,KAAK,CAACG,WAAN,KAAsB,GAAtB,GAA4BH,KAAK,CAACI,QAAN,EAA5B,GAA+C,GAA/C,GAAqDJ,KAAK,CAACK,OAAN,EAAzE;;AACA,MAAGP,OAAH,EAAW;AACT;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,WAAO;AACLN,MAAAA,KAAK,EAAE;AACLc,QAAAA,MAAM,EAAE,IADH;AAELC,QAAAA,IAAI,EAAET,OAAO,CAACS,IAFT,CAGL;;AAHK;AADF,KAAP;AAOD;;AACD,SAAO;AACLf,IAAAA,KAAK,EAAE;AACLc,MAAAA,MAAM,EAAE,KADH;AAELC,MAAAA,IAAI,EAAE;AAFD;AADF,GAAP;AAMD","sourcesContent":["import React, { useEffect } from 'react'\nimport auth0 from '../lib/auth0'\nimport router from 'next/router'\n//import { db } from '../lib/db'\n\nconst App = props => {\n  // useEffect(() => {\n  //   if(!props.isAuth){\n  //     router.push('/')\n  //   } else if(props.forceCreate) {\n  //     router.push('/create-status')\n  //   }\n  // })\n\n  // if(!props.isAuth || !props.forceCreate){\n  //   return null\n  // }\n\n  return (\n    <div>\n      <h1>App</h1>\n      <table>\n        \n      </table>\n      <pre>{JSON.stringify(props, null, 2)}</pre>\n    </div>\n  )\n}\n\nexport default App\n\nexport async function getServerSideProps({ req, res }) {\n  const session = await auth0.getSession(req)\n  const today = new Date()\n  const currentDate = today.getFullYear() + '-' + today.getMonth() + '-' + today.getDate()\n  if(session){\n    // const todaysCheckin = await db\n    //   .collection('markers')\n    //   .doc(currentDate)\n    //   .collection('checks')\n    //   .doc(session.user.sub)\n    //   .get()\n\n    // const todaysData = todaysCheckin.data()\n    // let forceCreate = true\n\n    // if(todaysData){\n    //   forceCreate = false\n    //   const checkins = await db\n    //     .collection('markers')\n    //     .doc(currentDate)\n    //     .collection('checks')\n    //     .near({\n    //       center: todaysData.coordinates,\n    //       radius: 1000\n    //     })\n    //     .get()\n\n    //     const checkinsList = []\n\n    //     checkins.docs.forEach(doc => {\n    //       checkinsList.push({\n    //         id: doc.id,\n    //         status: doc.data().status,\n    //         coords: {\n    //           lat: doc.data().coordinates.latitude,\n    //           long: doc.data().coordinates.longitude\n    //         }\n    //       })\n    //     })\n\n    //     return {\n    //       props: {\n    //         isAuth: true,\n    //         user: session.user,\n    //         forceCreate: false,\n    //         checkins: checkinsList\n    //       }\n    //     }\n    // } \n\n    return {\n      props: {\n        isAuth: true,\n        user: session.user\n        // forceCreate\n      }\n    }\n  }\n  return {\n    props: {\n      isAuth: false,\n      user: {}\n    }\n  }\n}"]},"metadata":{},"sourceType":"module"}